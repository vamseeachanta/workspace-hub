// jest.config.js Template
//
// Configuration file for Jest testing framework
// Copy this file to your project root as 'jest.config.js'
//
// Usage: npm test or jest

module.exports = {
  // Test environment
  testEnvironment: 'node', // Options: 'node', 'jsdom', 'browser'

  // Test file patterns
  testMatch: [
    '**/__tests__/**/*.(js|jsx|ts|tsx)',
    '**/*.(test|spec).(js|jsx|ts|tsx)'
  ],

  // Ignore patterns
  testPathIgnorePatterns: [
    '/node_modules/',
    '/dist/',
    '/build/',
    '/coverage/',
    '/public/',
    '/.next/',
    '/.nuxt/'
  ],

  // Coverage configuration
  collectCoverage: true,
  collectCoverageFrom: [
    'src/**/*.(js|jsx|ts|tsx)',
    '!src/**/*.d.ts',
    '!src/index.(js|ts)',
    '!src/**/__tests__/**',
    '!src/**/*.test.*',
    '!src/**/*.spec.*',
    '!src/**/*.stories.*',
    '!src/**/types.*',
    '!src/**/constants.*'
  ],

  // Coverage output
  coverageDirectory: 'coverage',
  coverageReporters: [
    'text',
    'text-summary',
    'html',
    'lcov',
    'clover',
    'json'
  ],

  // Coverage thresholds
  coverageThreshold: {
    global: {
      branches: 80,
      functions: 80,
      lines: 80,
      statements: 80
    },
    // Per-file thresholds (uncomment if needed)
    // './src/critical-module.js': {
    //   branches: 90,
    //   functions: 90,
    //   lines: 90,
    //   statements: 90
    // }
  },

  // Setup files
  setupFilesAfterEnv: [
    '<rootDir>/tests/setup.js'
  ],

  // Module name mapping (for path aliases)
  moduleNameMapping: {
    '^@/(.*)$': '<rootDir>/src/$1',
    '^@components/(.*)$': '<rootDir>/src/components/$1',
    '^@utils/(.*)$': '<rootDir>/src/utils/$1',
    '^@services/(.*)$': '<rootDir>/src/services/$1',
    '^@config/(.*)$': '<rootDir>/src/config/$1'
  },

  // Module file extensions
  moduleFileExtensions: [
    'js',
    'jsx',
    'ts',
    'tsx',
    'json'
  ],

  // Transform files
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': 'babel-jest'
    // Uncomment for TypeScript projects:
    // '^.+\\.(ts|tsx)$': 'ts-jest'
  },

  // Transform ignore patterns
  transformIgnorePatterns: [
    '/node_modules/(?!(module-to-transform|another-module)/)'
  ],

  // Mock configuration
  clearMocks: true,
  restoreMocks: true,
  resetMocks: false,

  // Test execution
  verbose: true,
  bail: false, // Set to true to stop on first failure
  maxWorkers: '50%', // Parallel test execution

  // Timeouts
  testTimeout: 10000, // 10 seconds
  setupFilesAfterEnvTimeout: 10000,

  // Error handling
  errorOnDeprecated: true,

  // Watch mode configuration
  watchPathIgnorePatterns: [
    '/node_modules/',
    '/coverage/',
    '/dist/',
    '/build/'
  ],

  // Globals
  globals: {
    'process.env.NODE_ENV': 'test'
  },

  // Project-specific configuration
  projects: [
    // Uncomment for multi-project setup
    // {
    //   displayName: 'unit',
    //   testMatch: ['<rootDir>/tests/unit/**/*.test.js']
    // },
    // {
    //   displayName: 'integration',
    //   testMatch: ['<rootDir>/tests/integration/**/*.test.js']
    // }
  ],

  // Reporter configuration
  reporters: [
    'default',
    // Uncomment for additional reporters
    // ['jest-junit', {
    //   outputDirectory: 'test-results',
    //   outputName: 'junit.xml'
    // }]
  ],

  // Snapshot configuration
  snapshotSerializers: [
    // Add snapshot serializers if needed
  ],

  // Cache configuration
  cacheDirectory: '/tmp/jest_cache',

  // Notify configuration (for watch mode)
  notify: false,
  notifyMode: 'failure-change',

  // Performance configuration
  detectOpenHandles: true,
  forceExit: false,

  // ESM support (uncomment if using ES modules)
  // preset: '@babel/preset-env',
  // extensionsToTreatAsEsm: ['.ts', '.tsx'],

  // For React projects (uncomment if needed)
  // testEnvironment: 'jsdom',
  // setupFilesAfterEnv: ['<rootDir>/src/setupTests.js'],

  // For TypeScript projects (uncomment if needed)
  // preset: 'ts-jest',
  // moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json'],

  // Additional configuration options
  collectCoverageOnlyFrom: {
    // Collect coverage only from specific files
  },

  // Custom test matchers (uncomment if using @testing-library/jest-dom)
  // setupFilesAfterEnv: ['@testing-library/jest-dom/extend-expect'],

  // Memory leak detection
  detectLeaks: false, // Set to true for memory leak detection

  // Test result processor
  // testResultsProcessor: 'jest-sonar-reporter'
};