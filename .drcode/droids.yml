# Factory AI Droids Configuration - Workspace Hub
# Version: 1.0.0
# Last Updated: 2025-10-04

# Workspace-level droid configuration for multi-repository management

workspace:
  name: workspace-hub
  description: Multi-repository workspace with centralized management
  type: multi-repo
  repositories: 26

# Default droid behavior for all repositories
defaults:
  model: claude-sonnet-3-5
  temperature: 0.7
  max_tokens: 4096

  # Context and system prompts
  system_prompt: |
    You are an AI development assistant working in the workspace-hub multi-repository environment.

    Key Context:
    - This workspace manages 26 independent Git repositories
    - Use SPARC methodology (Specification, Pseudocode, Architecture, Refinement, Completion)
    - Follow Test-Driven Development (TDD) principles
    - Integrate with Claude Flow, Spec-Kit, and Agent OS systems
    - All code changes should be reviewed through gate-pass checks

    Standards:
    - Code Style: Follow repository-specific standards in .agent-os/standards/
    - Documentation: Always update relevant docs when changing code
    - Testing: Write tests before implementation
    - Git: Use descriptive commit messages following conventional commits
    - Interactive Plots: HTML reports MUST use interactive plots (Plotly, Bokeh, Altair, D3.js)
    - CSV Data: Import data with relative paths from /data/ directories

    Integration:
    - AI Agents: Check modules/config/ai-agents-registry.json for available agents
    - Gate-Pass: Use modules/automation/gate_pass_review.sh for quality checks
    - Orchestration: Leverage modules/automation/agent_orchestrator.sh for task routing

    Always prioritize code quality, maintainability, and adherence to established patterns.

  # File handling preferences
  file_preferences:
    # Never modify these files without explicit request
    protected:
      - .git/**
      - .drcode/**
      - .agent-os/product/decisions.md
      - modules/config/ai-agents-registry.json

    # Auto-format these file types
    auto_format:
      - "*.py"
      - "*.js"
      - "*.ts"
      - "*.json"
      - "*.yml"
      - "*.yaml"

    # Directories to focus on
    focus_directories:
      - src/
      - modules/
      - tests/
      - docs/

  # Code style preferences
  code_style:
    python:
      line_length: 100
      indent: 4
      quotes: double
      type_hints: required
      docstrings: google_style

    javascript:
      line_length: 100
      indent: 2
      quotes: single
      semicolons: false

    bash:
      indent: 2
      shellcheck: true

  # Testing preferences
  testing:
    framework: pytest  # Default for Python repos
    coverage_threshold: 80
    run_tests_before_commit: true
    test_directory: tests/

  # Git preferences
  git:
    commit_message_format: conventional
    branch_naming: feature/descriptive-name
    auto_stage: false  # Require manual review before staging

# Specialized droid configurations for specific tasks
droids:
  # Refactoring droid
  refactor:
    model: claude-sonnet-3-5
    temperature: 0.3  # Lower for more consistent refactoring
    context: |
      Focus on code quality improvements:
      - Extract repeated logic into reusable functions
      - Improve naming for clarity
      - Apply SOLID principles
      - Maintain existing functionality (tests must pass)
      - Document significant changes

  # Feature development droid
  feature:
    model: claude-sonnet-3-5
    temperature: 0.7
    context: |
      Implement new features following SPARC methodology:
      1. Specification: Understand requirements
      2. Pseudocode: Plan algorithm/approach
      3. Architecture: Design components
      4. Refinement: TDD implementation (tests first)
      5. Completion: Integration and documentation

      Always check .agent-os/specs/ for active specifications.

  # Bug fix droid
  bugfix:
    model: claude-sonnet-3-5
    temperature: 0.4
    context: |
      Fix bugs systematically:
      - Reproduce the issue with a test
      - Identify root cause
      - Implement minimal fix
      - Verify all tests pass
      - Document the fix in commit message

  # Documentation droid
  docs:
    model: claude-sonnet-3-5
    temperature: 0.6
    context: |
      Generate and update documentation:
      - API documentation from code
      - User guides and tutorials
      - Architecture diagrams (mermaid)
      - Code comments and docstrings
      - README files

      Use Markdown format for all documentation.

  # Testing droid
  testing:
    model: claude-sonnet-3-5
    temperature: 0.5
    context: |
      Write comprehensive tests:
      - Unit tests for individual functions
      - Integration tests for workflows
      - Edge cases and error conditions
      - Achieve 80%+ coverage
      - Use pytest for Python, appropriate frameworks for other languages

  # Migration droid
  migration:
    model: claude-sonnet-4-0  # Use more capable model for complex migrations
    temperature: 0.3
    context: |
      Handle migrations carefully:
      - Analyze current state thoroughly
      - Plan migration steps
      - Create rollback procedures
      - Test extensively before applying
      - Document migration process

# Repository type configurations
repository_types:
  # Python data analysis repositories
  python_analysis:
    file_extensions: [".py", ".ipynb"]
    primary_frameworks: [pandas, numpy, plotly]
    context: |
      Python data analysis repository:
      - Use UV for environment management
      - Interactive plots with Plotly/Bokeh/Altair
      - CSV data import with relative paths
      - HTML reports in /reports/ directory
      - Data files in /data/ directory

  # Web application repositories
  web_app:
    file_extensions: [".js", ".ts", ".jsx", ".tsx", ".html", ".css"]
    primary_frameworks: [react, vue, express]
    context: |
      Web application repository:
      - Follow modern JavaScript/TypeScript patterns
      - Component-based architecture
      - Responsive design
      - Accessibility (a11y) compliance

  # Engineering calculation repositories
  engineering:
    file_extensions: [".py", ".m", ".jl"]
    primary_frameworks: [numpy, scipy, sympy]
    context: |
      Engineering calculation repository:
      - Emphasize numerical accuracy
      - Clear documentation of formulas and assumptions
      - Unit tests for critical calculations
      - Version control for calculation methods

# Integration with workspace-hub systems
integrations:
  claude_flow:
    enabled: true
    mcp_tools: [swarm_init, agent_spawn, task_orchestrate, memory_usage]

  spec_kit:
    enabled: true
    spec_directory: .agent-os/specs/

  agent_os:
    enabled: true
    product_docs: .agent-os/product/

  ai_orchestrator:
    enabled: true
    registry: modules/config/ai-agents-registry.json
    gate_pass: modules/automation/gate_pass_review.sh
    daily_updates: modules/automation/update_ai_agents_daily.sh

# Reporting and visualization
reporting:
  interactive_plots_required: true
  allowed_libraries:
    - plotly
    - bokeh
    - altair
    - d3.js
  forbidden_libraries:
    - matplotlib (static)  # Only for non-report usage
    - seaborn (static)     # Only for non-report usage

  html_reports:
    template_directory: modules/reporting/templates/
    output_directory: reports/

  data_handling:
    csv_paths: relative
    data_directories:
      - data/raw/
      - data/processed/
      - data/results/

# Performance and resource management
performance:
  max_file_size_mb: 10  # Don't process files larger than this
  max_concurrent_files: 50
  timeout_seconds: 300  # 5 minutes per task

# Security and safety
security:
  # Never commit these patterns
  secret_patterns:
    - "password\\s*=\\s*['\"].*['\"]"
    - "api_key\\s*=\\s*['\"].*['\"]"
    - "secret\\s*=\\s*['\"].*['\"]"
    - "token\\s*=\\s*['\"].*['\"]"

  # Safe mode - extra validation
  safe_mode: true
  require_approval_for:
    - database_migrations
    - file_deletions
    - system_commands
    - external_api_calls

# Logging and monitoring
logging:
  level: INFO
  include_context: true
  log_file: .drcode/droid.log

monitoring:
  track_performance: true
  track_token_usage: true
  generate_reports: true
