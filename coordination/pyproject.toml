[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coordination"
version = "0.1.0"
description = "Coordination system for multi-agent task management"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Vamsee Achanta", email = "vamsee.achanta@aceengineer.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pyyaml>=6.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
]
dev = [
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/vamseeachanta/coordination"
Repository = "https://github.com/vamseeachanta/coordination"
Issues = "https://github.com/vamseeachanta/coordination/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["coordination*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --verbose"
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
    "coordination: mark test as coordination-specific",
    "slow: mark test as slow running",
    "agent: mark test as agent-related",
    "memory: mark test as memory-related",
    "external: mark test as requiring external services"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["coordination"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["yaml.*"]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*_test.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
]
skip_empty = true
show_missing = true
precision = 2
fail_under = 0  # Set to 0 for baseline - will increase as code is added

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"